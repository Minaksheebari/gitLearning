
-- 1. Retrieve a list of all customers along with their email addresses.
select first_name, last_name,email from customers;

-- 2. Find the total number of orders placed by each customer.
select count(customer_id) from orders group by customer_id;

-- OR

SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    COUNT(o.order_id) AS total_orders
FROM
    customers c
LEFT JOIN
    orders o
ON
    c.customer_id = o.customer_id
GROUP BY
    c.customer_id; 


-- 3. List all products along with their prices.
select product_name, price from products;

-- 4. Retrieve the category with the highest number of products.
select c.category_name,count(p.category_id) as high_products 
from category c inner join products p on c.category_id = p.category_id 
group by c.category_name order by high_products desc limit 1;


-- 5. Find all customers who have not placed any orders.
select c.first_name from customers c left join orders o on c.customer_id=o.customer_id 
where o.customer_id IS NULL;


-- 6. List the products with the highest and lowest prices.
select product_name,price from products order by price desc limit 1; 	-- give high price product
select product_name,price from products order by price asc limit 1; 	-- give low price product


-- 7. Calculate the average order amount for each customer.
select c.first_name, avg(o.total_amount) from customers c join orders o on c.customer_id = o.customer_id 
group by(o.customer_id);

-- 8. Find the categories that do not have any products.
select c.category_name from category c left join products p on c.category_id=p.category_id 
where p.category_id IS NULL;

-- 9. Retrieve a list of customers who have placed orders for products with a price higher than $100.
-- Ask for help product & order have no common fields
SELECT DISTINCT c.customer_id, c.first_name FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN orders o2 ON o.order_id = o2.order_id
JOIN products p ON o2.product_id = p.product_id
WHERE p.price > 500;


-- 10. List the customers who have placed orders for products from at least three different categories.
select c.first_name from customers c join orders o on c.customer_id=o.customer_id
join products p on o.product_id= p.product_id			-- Need product_id column in orders table
join category ct on ct.category_id=p.category_id
group by c.customer_id having count(ct.category_id)>=2;

-- 11. Find the products with the highest and lowest average customer ratings (if a rating table is available).
-- Since rating table is not available we need to work on it.


-- 12. Calculate the total revenue generated from each category.
select ct.category_id,ct.category_name, sum(price) as revenue
from category ct join products p on ct.category_id=p.category_id
group by ct.category_id;






